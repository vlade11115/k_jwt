name: Deploy to S3 and CloudFront

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - closed

jobs:
  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Sync files to S3
        run: |
          aws s3 sync src/ s3://${{ secrets.S3_BUCKET_NAME }}/ \
            --delete \
            --cache-control "max-age=31536000" \
            --exclude "*.html" \
            --exclude "*.xml" \
            --exclude "*.txt"
          
          # Set shorter cache for HTML, XML, and text files
          aws s3 sync src/ s3://${{ secrets.S3_BUCKET_NAME }}/ \
            --cache-control "max-age=300" \
            --include "*.html" \
            --include "*.xml" \
            --include "*.txt"

      - name: Invalidate CloudFront distribution
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"

      - name: Deployment summary
        run: |
          echo "üöÄ Deployment completed successfully!"
          echo "üì¶ Files synced to S3 bucket: ${{ secrets.S3_BUCKET_NAME }}"
          echo "üåê CloudFront distribution invalidated: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}"
          echo "üîó Site URL: https://jwt.kartavets.com/"